<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
					xmlns:xaml="clr-namespace:Ecng.Xaml"
					xmlns:au="clr-namespace:Ecng.Xaml.AutoUpdater"
					xmlns:system="clr-namespace:System;assembly=mscorlib">

	<Style x:Key="BothResizeGripperStyle" Style.TargetType="{x:Type Thumb}">
		<Setter Setter.Property="FrameworkElement.Cursor" Setter.Value="SizeNWSE" />
		<Setter Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Right" />
		<Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="{x:Static SystemParameters.HorizontalScrollBarHeight}" />
		<Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="{x:Static SystemParameters.VerticalScrollBarWidth}" />
		<Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
		<Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Bottom" />
		<Setter Setter.Property="Control.Template">
			<Setter.Value>
				<ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
					<Grid Panel.Background="{TemplateBinding Control.Background}" UIElement.SnapsToDevicePixels="True">
						<Path FrameworkElement.HorizontalAlignment="Right" FrameworkElement.VerticalAlignment="Bottom" Shape.Fill="#FFFFFFFF" FrameworkElement.Margin="0,0,3,3" Path.Data="M8,0L10,0 10,2 8,2z M4,4L6,4 6,6 4,6z M8,4L10,4 10,6 8,6z M0,8L2,8 2,10 0,10z M4,8L6,8 6,10 4,10z M8,8L10,8 10,10 8,10z" />
						<Path FrameworkElement.HorizontalAlignment="Right" FrameworkElement.VerticalAlignment="Bottom" Shape.Fill="{TemplateBinding Control.Foreground}" FrameworkElement.Margin="0,0,4,4" Path.Data="M8,0L10,0 10,2 8,2z M4,4L6,4 6,6 4,6z M8,4L10,4 10,6 8,6z M0,8L2,8 2,10 0,10z M4,8L6,8 6,10 4,10z M8,8L10,8 10,10 8,10z" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Trigger.Property="FrameworkElement.FlowDirection" Trigger.Value="RightToLeft">
				<Setter Setter.Property="FrameworkElement.Cursor" Setter.Value="SizeNESW" />
			</Trigger>
		</Style.Triggers>
	</Style>
	
	<Style x:Key="HorizontalResizeGripperStyle" Style.TargetType="{x:Type Thumb}">
		<Setter Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Right" />
		<Setter Setter.Property="FrameworkElement.Cursor" Setter.Value="SizeWE" />
		<Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="28" />
		<Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="5" />
		<Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
		<Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Center" />
		<Setter Setter.Property="Control.Template">
			<Setter.Value>
				<ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
					<Grid Panel.Background="{TemplateBinding Control.Background}" UIElement.SnapsToDevicePixels="True">
						<Path FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="#FFFFFFFF" FrameworkElement.Margin="1,1,0,0" Path.Data="M0,0L0,2 2,2 2,0z M0,5L0,7 2,7 2,5z M0,10L0,12 2,12 2,10z M0,15L0,17 2,17 2,15z" />
						<Path FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{TemplateBinding Control.Foreground}" FrameworkElement.Margin="0,0,1,1" Path.Data="M0,0L0,2 2,2 2,0z M0,5L0,7 2,7 2,5z M0,10L0,12 2,12 2,10z M0,15L0,17 2,17 2,15z" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="VerticalResizeGripperStyle" Style.TargetType="{x:Type Thumb}">
		<Setter Setter.Property="FrameworkElement.Cursor" Setter.Value="SizeNS" />
		<Setter Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Center" />
		<Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="5" />
		<Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="28" />
		<Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
		<Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Bottom" />
		<Setter Setter.Property="Control.Template">
			<Setter.Value>
				<ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
					<Grid Panel.Background="{TemplateBinding Control.Background}" UIElement.SnapsToDevicePixels="True">
						<Path FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="#FFFFFFFF" FrameworkElement.Margin="1,1,0,0" Path.Data="M0,0L2,0 2,2 0,2z M5,0L7,0 7,2 5,2z M10,0L12,0 12,2 10,2z M15,0L17,0 17,2 15,2z" />
						<Path FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{TemplateBinding Control.Foreground}" FrameworkElement.Margin="0,0,1,1" Path.Data="M0,0L2,0 2,2 0,2z M5,0L7,0 7,2 5,2z M10,0L12,0 12,2 10,2z M15,0L17,0 17,2 15,2z" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="{x:Type xaml:ResizableContentControl}" Style.TargetType="{x:Type xaml:ResizableContentControl}" >
		<Setter Setter.Property="Control.Template">
			<Setter.Value>
				<ControlTemplate ControlTemplate.TargetType="{x:Type xaml:ResizableContentControl}">
					<Border Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.Background="{TemplateBinding Control.Background}">
						<Grid>
							<ContentPresenter ContentPresenter.Name="PART_Presenter" ContentPresenter.Content="{TemplateBinding ContentControl.Content}" ContentPresenter.ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentPresenter.ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" FrameworkElement.Margin="{TemplateBinding Control.Padding}" />
							<Thumb Thumb.Name="PART_Gripper" Control.Background="{TemplateBinding xaml:ResizableContentControl.GripperBackground}" Control.Foreground="{TemplateBinding xaml:ResizableContentControl.GripperForeground}" FrameworkElement.Style="{StaticResource BothResizeGripperStyle}" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Trigger.Property="xaml:ResizableContentControl.ResizeMode" Trigger.Value="None">
							<Setter Setter.TargetName="PART_Gripper" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
						</Trigger>
						<Trigger Trigger.Property="xaml:ResizableContentControl.ResizeMode" Trigger.Value="Horizontal">
							<Setter Setter.TargetName="PART_Gripper" Setter.Value="{StaticResource HorizontalResizeGripperStyle}" Setter.Property="FrameworkElement.Style" />
						</Trigger>
						<Trigger Trigger.Property="xaml:ResizableContentControl.ResizeMode" Trigger.Value="Vertical">
							<Setter Setter.TargetName="PART_Gripper" Setter.Value="{StaticResource VerticalResizeGripperStyle}" Setter.Property="FrameworkElement.Style" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type xaml:BusyIndicator}">
        <Setter Property="BusyContent" Value="Please wait..." />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="White" />
                    <Setter Property="Opacity" Value="0.5" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xaml:BusyIndicator}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="busycontent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="overlay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="busycontent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="overlay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="content" Storyboard.TargetProperty="(Control.IsEnabled)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="content" Storyboard.TargetProperty="(Control.IsEnabled)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>False</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False" Focusable="False" />
                        <Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}" />
                        <ContentPresenter x:Name="busycontent">
                            <ContentPresenter.Content>
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border Background="White" BorderThickness="1" CornerRadius="2">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Color="#FFA3AEB9" Offset="0" />
                                                <GradientStop Color="#FF8399A9" Offset="0.375" />
                                                <GradientStop Color="#FF718597" Offset="0.375" />
                                                <GradientStop Color="#FF617584" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border CornerRadius="1.5" Margin="1">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <GradientStop Color="#FFF6F8F9" Offset="0.02" />
                                                    <GradientStop Color="#FFB8B8B8" Offset="0.996" />
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Grid MinWidth="150">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <ContentPresenter Content="{TemplateBinding BusyContent}" 
																  ContentTemplate="{TemplateBinding BusyContentTemplate}" 
																  Margin="8" />
                                            </Grid>
                                        </Border>
                                    </Border>
                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <au:MultiplyConverter x:Key="_multiplyConverter"/>

    <Style TargetType="{x:Type au:AutomaticUpdater}">
        <Style.Triggers>
            <DataTrigger Value="True" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames FillBehavior="HoldEnd" Storyboard.TargetProperty="IsExpanded">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames FillBehavior="HoldEnd" Storyboard.TargetProperty="IsExpanded" BeginTime="0:0:3">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>

        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="MinHeight" Value="16"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type au:AutomaticUpdater}">
                    <StackPanel Orientation="Horizontal">
                        <Grid Width="16" Height="16">
                            <Image x:Name="PART_Icon" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <TextBlock x:Name="_tb2">
                            <Run Text=" "/><Run Text="{TemplateBinding Text}"/><Run Text=" "/>
                            <TextBlock.Width>
                                <MultiBinding Converter="{StaticResource _multiplyConverter}">
                                   <Binding Path="ActualWidth" ElementName="_tb2"/>
                                   <Binding Path="Tag" ElementName="_tb2"/>
                                   <Binding Path="Text" ElementName="_tb2"/>
                                </MultiBinding>
                            </TextBlock.Width>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Tag">
                                        <Setter.Value><system:Double>0.0</system:Double></Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Value="True" Binding="{Binding IsExpanded, RelativeSource={RelativeSource FindAncestor, AncestorType=au:AutomaticUpdater}}">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                       <DoubleAnimation Storyboard.TargetProperty="Tag" To="1" Duration="0:0:0.2" FillBehavior="HoldEnd">
                                                            <DoubleAnimation.EasingFunction>
                                                                <CubicEase EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                       </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                       <DoubleAnimation Storyboard.TargetProperty="Tag" To="0" Duration="0:0:0.2" FillBehavior="HoldEnd">
                                                           <DoubleAnimation.EasingFunction>
                                                                <CubicEase EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                       </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>